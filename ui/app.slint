import { Date as DatePanel, Time as TimePanel, StatusPanel }
	from "shared.slint";

import { TimeBlock, TimeBlockPanel, State }
	from "table.slint";

import { Headline, NewsPanel }
	from "news.slint";

export { State }

global Language := {
	property <string> title-regular: "Stundenplan";
	property <string> title-exam: "Prüfungsplan";
	
	property <string> lesson-break: "Vorlesungsfrei\n¯\\_(ツ)_/¯";
	
	property <string> timeoff-regular: "Feierabend!";
	property <string> timeoff-exam: "Einfach morgen weiter lernen...";
}

export struct Headline := {
	title: string,
	date: string,
	time: string,
}

export App := Window {
	property <string> date <=> date.date;
	property <string> time <=> time.time;
	property <int> secs <=> time.secs;

	property <string> timetable_status;
	property <string> headlines_status;

	property <bool> loading: true;
	property <bool> time-off: false;
	property <int> exam-days-left: 0;
	property <bool> exam-phase: exam-days-left > 0;

	property <[TimeBlock]> time_blocks;
	property <[Headline]> headlines;

	title: exam-phase ? Language.title-exam : Language.title-regular;
	background: #272b30;
	default-font-family: "Noto Sans";
	default-font-size: 32px;
	min-height: 100px;
	min-width: 300px;
	max-width: 10000px;

	// Background
	if loading : Text {
		text: "Loading...";
		font-size: 102pt;
		color: #FFFFFF33;
		x: (parent.width - width) * 50%;
		y: (parent.height - height) * 50%;
		z: -1;
	}
	VerticalLayout {
		alignment: start;
		padding-left: 10px;
		padding-right: 10px;

		VerticalLayout {
			HorizontalLayout {
				alignment: space-between;
				spacing: 4px;

				time := TimePanel {}
				Text {
					text: title;
					color: root.exam-phase ? #FAA : #FFF;
					font-size: 30pt;
					font-weight: 700;

					horizontal-alignment: center;
				}
				date := DatePanel {}
			}
			StatusPanel { message: root.timetable_status; }
		}
		Rectangle { height: 2px; background: #32383e;}

		lecture-box := VerticalLayout {
			if !root.time-off : Flickable {
				interactive: true;

				VerticalLayout {
					alignment: start;
					spacing: 5px;

					for block[idx] in root.time_blocks : VerticalLayout {
						cache-rendering-hint: true;

						if block.date != "" && idx != 0 : VerticalLayout {
							padding-top: 4px;
							padding-bottom: 8px;
							Rectangle { height: 1px; background: #3e444c.brighter(100%); }
						}
						TimeBlockPanel { data: block; }
					}
				}
			}
		}

		if !root.loading && root.time-off && root.time-blocks.length > 0 : VerticalLayout {
			alignment: center;
			height: root.height - headline-box.height;

			Text {
				text: root.exam-phase ? Language.timeoff-exam : Language.timeoff-regular;
				font-size: 80pt;

				color: #fa5;
				wrap: word-wrap;
				vertical-alignment: center;
				horizontal-alignment: center;
			}
			if root.exam-phase : Text {
				text: "(Erlösung in " + root.exam-days-left + " Tagen)";
				font-size: 30pt;

				color: #FFFFFF88;
				wrap: word-wrap;
				vertical-alignment: center;
				horizontal-alignment: center;
			}
		}
		if !root.loading && root.time-blocks.length == 0 : VerticalLayout {
			alignment: center;
			height: root.height - headline-box.height;

			Text {
				text: Language.lesson-break;
				font-size: 80pt;

				color: #fa5;
				wrap: word-wrap;
				vertical-alignment: center;
				horizontal-alignment: center;
			}
		}
	}

	headline-box := VerticalLayout {
		height: 56px * min(headlines.length, 4);
		padding: 7px;
		y: parent.height - height;
		z: 1;

		StatusPanel { message: root.headlines_status; }
		NewsPanel { data: headlines; }
	}
	if lecture-box.height > 0 : Rectangle {
		height: 150px;
		width: lecture-box.width;
		x: lecture-box.x;
		y: headline-box.y - height * 95%;
		background: @linear-gradient(0deg, #272b30FF 0%, #272b30FF 5%,#272b3000 100%);
	}
	Rectangle {
		height: root.height - headline-box.y;
		width: root.width;
		x: lecture-box.x;
		y: headline-box.y;
		background: root.background;
	}
}
