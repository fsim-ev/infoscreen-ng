global Language := {
	property <string> title: "Busfahrplan";

	property <string> now: "jetzt";
	property <string> minute-abbr: "min";
	property <string> hour-abbr: "h";

	property <string> departure_at: "Abfahrt um";
	property <string> departure_in: "in";
	property <string> line: "Linie";
	property <string> direction: "Richtung ";
	property <string> stop: "Haltestelle";
}

global Style := {
	property <string> font-family: "Noto Sans";
	property <brush> text-color: #fff;

	property <brush> block-background: #32383e;

	property <color> dep-delay-color: #f89406;
	property <color> dep-time-color-chill: #62c462;
	property <color> dep-time-color-pushy: #f89406;
	property <color> dep-time-color-crit: #ee5f5b;
	property <color> dep-time-color-missed: #aaaaaa;
	
	property <color> line-background: #111;
	property <color> line-border-color: #EDE13B;
	property <color> line-text-color: line-border-color;

}

// API
//#####
export struct BusStop := {
	name: string,
	color: color,
	distance: int, // in m
	time_min: int, // in minutes
	time_max: int, // in minutes
}

export struct Departure := {
	time: string,
	delay: int,
	deadline: int,

	line: string,
	final_stop: string,

	local_stop_idx: int,
}

export global State := {
    property<int> time;
	property <[BusStop]> local_stop_list;
}


EntryPanel := Rectangle {
	property <Departure> data;
	property <BusStop> local-stop: State.local-stop-list[data.local-stop-idx];

	property <color> text-color: Style.text-color;
	property <color> shade: local-stop.color.darker(70%);

	background: @linear-gradient(90deg,
		shade 0%,
		Style.block-background 10%,
		Style.block-background 80%,
		shade 100%);

	// Base
	HorizontalLayout {
		alignment: space-between;
		padding-left: 10px;
		padding-right: 10px;
		padding-top: 5px;
		padding-bottom: 5px;
		spacing: 20px;

		// Departure time
		HorizontalLayout {
			spacing: 15px;
			width: 265px;

			// absolute
			HorizontalLayout {
				alignment: start;
				spacing: 5px;
				width: 150px;

				Text {
					text: data.time;
					color: text-color;
				}
				if data.delay != 0 : Text {
					text: (data.delay > 0 ? "+" : "-") + data.delay;
					color: Style.dep-delay-color;
					font-size: 20pt;
					vertical-alignment: center;
				}
			}
			// remaining
			Text {
				property <int> remaining: data.deadline - State.time;

				text: remaining == 0 ? Language.now :
					abs(remaining) <= 60 ? remaining + " " + Language.minute-abbr :
					floor(remaining/6)/10.0 + " " + Language.hour-abbr;
				font-size: 24pt;
				font-weight: 600;
				vertical-alignment: center;
				horizontal-alignment: left;

				color:
					remaining < local-stop.time-min ? Style.dep-time-color-missed :
					remaining < (local-stop.time-min+local-stop.time-max)/2 ? Style.dep-time-color-crit :
					remaining < local-stop.time-max ? Style.dep-time-color-pushy :
						Style.dep-time-color-chill;
				
				min-width: 100px;
			}
		}

		// Destination
		HorizontalLayout {
			alignment: start;
			spacing: 10px;
			min-width: 100px;

			// Route
			HorizontalLayout {
				alignment: end;
				preferred-width: 130px;

				Rectangle {
					max-width: 130px;
					min-width: 56px;
					
					background: Style.line-background;
					border-color: Style.line-border-color;
					border-radius: 4px;
					border-width: 2px;

					clip: true;
					HorizontalLayout {
						padding-left: 5px;
						padding-right: 5px;
						Text {
							text: data.line;
							color: Style.line-text-color;
							font-family: "Noto Sans Mono";
							horizontal-alignment: center;
						}
					}
				}
			}
			// Final stop
			Text {
				text: data.final-stop;
				overflow: elide;
				color: root.text-color;

				preferred-width: 450px;
				min-width: 100px;
			}
		}
		// Local stop
		Text {
			text: local-stop.name;
			overflow: elide;
			color: root.text-color.darker(0.5);
			font-size: 18pt;
			font-weight: 300;

			horizontal-alignment: right;
			vertical-alignment: center;

			width: 150px;
		}
	}
}

export Panel := Rectangle {
	property <[Departure]> schedule;
	property <string> direction;
	property <color> direction-color;
	
	VerticalLayout {
		alignment: start;
		spacing: 2px;

		// Header
		header := HorizontalLayout {
			alignment: space-between;
			padding-left: 10px;
			padding-right: 10px;
			spacing: 20px;

			// Departure time
			HorizontalLayout {
				alignment: start;
				width: 265px;

				// absolute
				Text {
					text: Language.departure-at;
					color: Style.text-color;
					font-weight: 600;
				}

				// remaining
				Text {
					text: "/" + Language.departure-in;
					color: Style.text-color;
					font-weight: 300;
					font-size: 24px;
					vertical-alignment: bottom;
				}
			}

			// Destination
			HorizontalLayout {
				preferred-width: 580px;
				padding-left: 50px;
				spacing: 20px;

				// Route
				Text {
					text: Language.line;
					color: Style.text-color;
					font-weight: 600;
				}

				// Final stop
				Text {
					text: Language.direction + root.direction;
					color: root.direction-color;
					font-weight: 700;
				}
			}

			// Local stop
			Text {
				text: Language.stop;
				color: Style.text-color.darker(0.8);
				font-weight: 400;
				horizontal-alignment: right;

				width: 150px;
			}
		}

		list := Flickable {		
		 	VerticalLayout {
		 		alignment: start;
				spacing: 2px;

				for departure in root.schedule : EntryPanel {
					data: departure;
				}
			}
		}
	}

	Rectangle {
		height: min(100px, root.height - root.min-height);
		x: list.x;
		y: list.y + list.height - height + 1px;
		
		background: @linear-gradient(0deg, #272b30FF 0%, #272b30FF 15%,#272b3000 100%);
	}
}


export BusStopList := VerticalLayout {
	property <[BusStop]> data: State.local_stop_list;
	property <color> text-color: #888;

	for bus-stop in root.data : HorizontalLayout {
		alignment: space-between;
		spacing: 5px;

		Text {
			text: bus-stop.name;
			font-size: 20px;
			color: bus-stop.color;
			vertical-alignment: center;

			width: 150px;
		}
		Text {
			text: bus-stop.distance + " m";
			font-size: 16px;
			color: text-color;
			vertical-alignment: center;
			//width: 50px;
		}
		Text {
			text: "(" + bus-stop.time_min + " - " + bus-stop.time_max + " " + Language.minute-abbr + ")";
			font-size: 16px;
			color: text-color;
			vertical-alignment: center;
			//width: 60px;
		}
	}
}
